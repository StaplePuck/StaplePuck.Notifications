# This is a basic workflow to help you get started with Actions

name: Prod - Build and Deploy

# Controls when the action will run. 
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    environment: Prod
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      
      - name: AWS CLI
        run: dotnet tool install -g Amazon.Lambda.Tools
      
      - name: Install Nuget
        uses: nuget/setup-nuget@v1
        with:        
            nuget-version: '5.x'

      - name: Restore dependencies
        run: dotnet restore
    
      - name: Setup Firebase File
        uses: nowactions/envsubst@v1
        with:
          input: ./src/StaplePuck.Notifications/firebase-adminsdk.json.template
          output: ./src/StaplePuck.Notifications/firebase-adminsdk.json
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      
      - name: Build
        run: dotnet build -c Release --no-restore
      
      - name: Deploy to AWS
        working-directory: ./src/StaplePuck.Notifications
        run: dotnet lambda deploy-serverless -sn prod-staplepuck-notifications -tp 'Auth0Audience="${{ vars.Auth0__Audience }}";Auth0ClientId="${{ secrets.Auth0__ClientId }}";Auth0ClientSecret="${{ secrets.Auth0__ClientSecret }}";Auth0TokenUrl="${{ vars.Auth0__TokenUrl }}";StaplePuckEndpoint="${{ vars.STAPLEPUNK__ENDPOINT }}";FCMSenderId="${{ secrets.FCM__SenderId }}";FCMSecretKey="${{ secrets.FCM__SecretKey }}";FCMFirbasePushNotificationURL="${{ secrets.FCM__FirbasePushNotificationURL }}"'
